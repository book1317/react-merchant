{"version":3,"sources":["page/Merchant/MerchantPage/MerchantPage.module.scss","page/Merchant/InventoryPage/InventoryPage.module.scss","page/Merchant/RegisterPage/RegisterPage.module.scss","utils/History.ts","constant/PageName.tsx","page/LoginPage/LoginPage.tsx","page/Merchant/Common/SideBar/SideBar.tsx","page/Merchant/InventoryPage/InventoryPage.tsx","page/Merchant/TransactionPage/TransactionPage.tsx","page/Merchant/MerchantPage/MerchantPage.tsx","page/Merchant/RegisterPage/RegisterPage.tsx","App.tsx","reportWebVitals.ts","index.tsx","page/LoginPage/LoginPage.module.scss"],"names":["module","exports","history","createBrowserHistory","basename","url","forceRefresh","replace","push","getObject","PageName","login","register","inventory","transaction","merchant","LoginPage","onFinish","values","console","log","username","password","localStorage","setItem","onFinishFailed","errorInfo","className","css","LoginPageContainer","title","loginFormContainer","name","initialValues","remember","this","Item","topForm","required","rules","message","placeholder","bottomForm","Password","valuePropName","noStyle","href","type","htmlType","color","onClick","React","Component","Sider","Layout","MenuList","content","key","SideBar","state","selectKey","renderListMenu","props","removeItem","forceUpdate","window","location","pathname","split","width","theme","mode","defaultSelectedKeys","defaultOpenKeys","style","height","borderRight","selectedKeys","map","menu","PureComponent","ItemStatus","INVENTORY_DATA","imageURL","price","remaining","status","InventoryPage","isShowImage","currentImage","openImageModal","image","setState","handleCancel","handleSubmit","columns","dataIndex","render","imageDetail","data","item","index","inventoryPage","maskTransitionName","visible","onOk","onCancel","src","alt","dataSource","TransactionPage","Header","MerchantPage","isLogin","getItem","merchantPage","header","padding","path","component","to","RegisterPage","registerPage","scrollToFirstError","hasFeedback","dependencies","getFieldValue","validator","_","value","Promise","reject","resolve","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.68d7d577.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"merchantPage\":\"MerchantPage_merchantPage__2WzKv\",\"header\":\"MerchantPage_header__S6g7A\",\"title\":\"MerchantPage_title__2qKHS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inventoryPage\":\"InventoryPage_inventoryPage__3OL3L\",\"imageDetail\":\"InventoryPage_imageDetail__1SxsG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerPage\":\"RegisterPage_registerPage__1tDyh\",\"title\":\"RegisterPage_title__3e2yz\"};","import { createBrowserHistory  } from 'history'\r\n\r\nexport class History {\r\n  getObject() {\r\n    return createBrowserHistory({ basename: '/omise-v2/' })\r\n  }\r\n\r\n  replace(url: string) {\r\n    const historyObj = createBrowserHistory({\r\n      forceRefresh: true,\r\n    });\r\n    historyObj.replace(url);\r\n  }\r\n\r\n  push(url: string) {\r\n    const historyObj = createBrowserHistory({\r\n      forceRefresh: true,\r\n    })\r\n    historyObj.push(url)\r\n  }\r\n}\r\n\r\nexport const history = new History()\r\nexport default history.getObject()\r\n","const PageName = {\r\n  login: '/login',\r\n  register: '/register',\r\n  inventory: '/inventory',\r\n  transaction: '/transaction',\r\n  merchant: '/merchant',\r\n}\r\n\r\nexport default PageName\r\n","import React from 'react'\r\nimport css from './LoginPage.module.scss'\r\nimport { Form, Input, Button, Checkbox } from 'antd'\r\nimport history from 'utils/History'\r\nimport PageName from 'constant/PageName'\r\n\r\nexport interface ILoginPageProps {}\r\n\r\nexport interface ILoginPageState {}\r\n\r\nclass LoginPage extends React.Component<ILoginPageProps, ILoginPageState> {\r\n  // state = { :  }\r\n  componentDidMount() {\r\n    console.log('didmount')\r\n  }\r\n\r\n  onFinish = (values: any) => {\r\n    console.log('Success:', values)\r\n    const { username, password } = values\r\n    // if (username === 'admin' && password === 'admin') {\r\n    localStorage.setItem('isAuthen', 'OK')\r\n    history.push(PageName.inventory)\r\n    // }\r\n  }\r\n\r\n  onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={css.LoginPageContainer}>\r\n        <div className={css.title}>Omise V2</div>\r\n        <div className={css.loginFormContainer}>\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={this.onFinish}\r\n            onFinishFailed={this.onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              className={css.topForm}\r\n              name=\"username\"\r\n              required\r\n              rules={[{ required: true, message: ' ' }]}\r\n            >\r\n              <Input placeholder=\"Username\" className={'rounded'} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              className={css.bottomForm}\r\n              name=\"password\"\r\n              rules={[{ required: true, message: ' ' }]}\r\n            >\r\n              <Input.Password placeholder=\"Password\" className={'rounded'} />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n              <Checkbox>Remember</Checkbox>\r\n            </Form.Item>\r\n\r\n            <a className=\"login-form-forgot\" href=\"htts://google.com\">\r\n              Forgot Password\r\n            </a>\r\n\r\n            <div>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className={'w-100 rounded mt-2 mb-2'}\r\n              >\r\n                Login\r\n              </Button>\r\n            </div>\r\n\r\n            <div>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className={'w-100 rounded bg-secondary border-secondary'}\r\n                color={'black'}\r\n                onClick={() => {\r\n                  history.push(PageName.register)\r\n                }}\r\n              >\r\n                Register\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginPage\r\n","import React from 'react'\r\nimport { Layout, Menu } from 'antd'\r\nimport PageName from 'constant/PageName'\r\nimport history from 'utils/History'\r\n\r\nconst { Sider } = Layout\r\n\r\nexport interface ISideBarProps {}\r\n\r\nexport interface ISideBarState {}\r\n\r\nconst MenuList = [\r\n  {\r\n    content: 'Inventory',\r\n    key: PageName.inventory,\r\n  },\r\n  {\r\n    content: 'Transaction',\r\n    key: PageName.transaction,\r\n  },\r\n  {\r\n    content: 'Log out',\r\n    key: PageName.login,\r\n  },\r\n]\r\n\r\nclass SideBar extends React.PureComponent<ISideBarProps, ISideBarState> {\r\n  state = { selectKey: [] }\r\n  renderListMenu = (props: any) => (\r\n    <Menu.Item\r\n      className={'mt-0 mb-0'}\r\n      key={props.key}\r\n      onClick={() => {\r\n        if (props.key === PageName.login) {\r\n          localStorage.removeItem('isAuthen')\r\n        }\r\n        history.replace(props.key)\r\n        this.forceUpdate()\r\n      }}\r\n    >\r\n      {props.content}\r\n    </Menu.Item>\r\n  )\r\n\r\n  componentDidMount() {\r\n    console.log('didmount sidbar')\r\n    this.forceUpdate()\r\n  }\r\n\r\n  render() {\r\n    // let keyPath = window.location.pathname\r\n    let keyPath = window.location.pathname.split('/')\r\n    const selectKey = ['/' + keyPath[2]]\r\n\r\n    return (\r\n      <Sider width={150} className=\"site-layout-background\">\r\n        <Menu\r\n          theme=\"dark\"\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={[PageName.inventory]}\r\n          defaultOpenKeys={[PageName.inventory]}\r\n          style={{ height: '100%', borderRight: 0 }}\r\n          selectedKeys={selectKey}\r\n        >\r\n          {MenuList.map((menu) => this.renderListMenu(menu))}\r\n        </Menu>\r\n      </Sider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SideBar\r\n","import React from 'react'\r\nimport { Table, Tag, Modal } from 'antd'\r\nimport css from './InventoryPage.module.scss'\r\n\r\ninterface IImageDetail {\r\n  name: string\r\n  imageURL: string\r\n}\r\n\r\nconst ItemStatus = {\r\n  Pending: 'PENDING',\r\n  SOLD: 'SOLD',\r\n  ACTIVE: 'ACTIVE',\r\n}\r\n\r\nexport interface IInventoryPageProps {}\r\n\r\nexport interface IInventoryPageState {\r\n  isShowImage: boolean\r\n  currentImage: IImageDetail\r\n}\r\n\r\nconst INVENTORY_DATA = [\r\n  {\r\n    name: 'เสื้อผ้าเด็ก',\r\n    imageURL: '',\r\n    price: 50.0,\r\n    remaining: 10,\r\n    status: 'PENDING',\r\n  },\r\n  {\r\n    name: 'เสื้อผ้าผู้ใหญ่',\r\n    imageURL: '',\r\n    price: 100.0,\r\n    remaining: 50,\r\n    status: 'SOLD',\r\n  },\r\n]\r\n\r\nclass InventoryPage extends React.Component<\r\n  IInventoryPageProps,\r\n  IInventoryPageState\r\n> {\r\n  state = {\r\n    isShowImage: false,\r\n    currentImage: {\r\n      imageURL: '',\r\n      name: '',\r\n    },\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('didmount')\r\n  }\r\n\r\n  openImageModal = (image: IImageDetail) => {\r\n    this.setState({ currentImage: image, isShowImage: true })\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({ isShowImage: false })\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.setState({ isShowImage: false })\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        render: (name: string) => <div>{name}</div>,\r\n      },\r\n      {\r\n        title: 'Image',\r\n        dataIndex: 'image',\r\n        key: 'image',\r\n        render: (image: IImageDetail) => (\r\n          <div\r\n            className={css.imageDetail}\r\n            onClick={() => {\r\n              this.openImageModal(image)\r\n            }}\r\n          >\r\n            Detail\r\n          </div>\r\n        ),\r\n      },\r\n      {\r\n        title: 'Price',\r\n        dataIndex: 'price',\r\n        key: 'price',\r\n        render: (price: number) => <div>{price}</div>,\r\n      },\r\n      {\r\n        title: 'Remaining',\r\n        dataIndex: 'remaining',\r\n        key: 'remaining',\r\n        render: (remaining: number) => <div>{remaining}</div>,\r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        render: (status: string) => {\r\n          let color = 'green'\r\n          switch (status) {\r\n            case ItemStatus.ACTIVE:\r\n              color = 'green'\r\n              break\r\n            case ItemStatus.Pending:\r\n              color = 'blue'\r\n              break\r\n            case ItemStatus.SOLD:\r\n              color = 'red'\r\n          }\r\n          return <Tag color={color}>{status}</Tag>\r\n        },\r\n      },\r\n    ]\r\n\r\n    const data = (INVENTORY_DATA as any).map((item: any, index: number) => {\r\n      item['key'] = index\r\n      item['image'] = { imageURL: item.imageURL, name: item.name }\r\n      return item\r\n    })\r\n\r\n    const { isShowImage, currentImage } = this.state\r\n\r\n    return (\r\n      <div className={css.inventoryPage}>\r\n        <Modal\r\n          maskTransitionName=\"\"\r\n          // mask={false}\r\n          title={currentImage.name || 'Title'}\r\n          visible={isShowImage}\r\n          onOk={this.handleSubmit}\r\n          onCancel={this.handleCancel}\r\n          // centered\r\n        >\r\n          <div>\r\n            <img\r\n              className={'w-100'}\r\n              src={\r\n                currentImage.imageURL ||\r\n                'https://ichef.bbci.co.uk/news/976/cpsprodpb/41CF/production/_109474861_angrycat-index-getty3-3.jpg'\r\n              }\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        </Modal>\r\n        <Table columns={columns} dataSource={data} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InventoryPage\r\n","import React from 'react'\r\n\r\nexport interface ITransactionPageProps {}\r\n\r\nexport interface ITransactionPageState {}\r\n\r\nclass TransactionPage extends React.Component<\r\n  ITransactionPageProps,\r\n  ITransactionPageState\r\n> {\r\n  // state = { :  }\r\n  componentDidMount() {\r\n    console.log('didmount')\r\n  }\r\n\r\n  render() {\r\n    return <div>Transaction</div>\r\n  }\r\n}\r\n\r\nexport default TransactionPage\r\n","import React from 'react'\r\nimport { Layout } from 'antd'\r\nimport css from './MerchantPage.module.scss'\r\nimport SideBar from '../Common/SideBar/SideBar'\r\nimport { Redirect, Route, Router, Switch } from 'react-router-dom'\r\nimport PageName from 'constant/PageName'\r\nimport InventoryPage from '../InventoryPage/InventoryPage'\r\nimport TransactionPage from '../TransactionPage/TransactionPage'\r\nimport history from 'utils/History'\r\n\r\nconst { Header } = Layout\r\n\r\nexport interface IMerchantPageProps {}\r\n\r\nexport interface IMerchantPageState {}\r\n\r\nclass MerchantPage extends React.Component<\r\n  IMerchantPageProps,\r\n  IMerchantPageState\r\n> {\r\n  componentDidMount() {\r\n    const isLogin = localStorage.getItem('isAuthen')\r\n    console.log('isLogin', isLogin)\r\n    if (!isLogin || isLogin !== 'OK') {\r\n      history.replace(PageName.login)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout className={css.merchantPage}>\r\n        <Header className={css.header}>\r\n          <div className={css.title}>Omagase V2</div>\r\n        </Header>\r\n        <Layout>\r\n          <SideBar />\r\n          <Layout style={{ padding: '24px 24px 24px' }}>\r\n            <Switch>\r\n              <Route path={PageName.inventory} component={InventoryPage} />\r\n              <Route path={PageName.transaction} component={TransactionPage} />\r\n              <Route path=\"/\">\r\n                <Redirect to={PageName.inventory} />\r\n              </Route>\r\n            </Switch>\r\n          </Layout>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MerchantPage\r\n","import React from 'react'\r\nimport css from './RegisterPage.module.scss'\r\nimport { Form, Input, Button } from 'antd'\r\nimport history from 'utils/History'\r\nimport PageName from 'constant/PageName'\r\n\r\nexport interface IRegisterPageProps {}\r\n\r\nexport interface IRegisterPageState {}\r\n\r\nclass RegisterPage extends React.Component<\r\n  IRegisterPageProps,\r\n  IRegisterPageState\r\n> {\r\n  // state = { :  }\r\n  componentDidMount() {\r\n    console.log('didmount')\r\n  }\r\n\r\n  onFinish = (values: any) => {\r\n    console.log('Success:', values)\r\n    history.push(PageName.login)\r\n  }\r\n\r\n  onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={css.registerPage}>\r\n        <div className={css.title}>Register</div>\r\n        <Form\r\n          name=\"register\"\r\n          onFinish={this.onFinish}\r\n          onFinishFailed={this.onFinishFailed}\r\n          scrollToFirstError\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '',\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Username\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: '',\r\n              },\r\n              {\r\n                required: true,\r\n                message: '',\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Email\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '',\r\n              },\r\n            ]}\r\n            hasFeedback\r\n          >\r\n            <Input.Password placeholder=\"Password\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"confirm\"\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve()\r\n                  }\r\n                  return Promise.reject(\r\n                    'The two passwords that you entered do not match!'\r\n                  )\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input.Password placeholder=\"Confirm Password\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item name=\"phone\" rules={[{ required: true, message: '' }]}>\r\n            <Input style={{ width: '100%' }} placeholder=\"Phone\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"w-100 rounded\">\r\n              Register\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RegisterPage\r\n","import { Router, Route, Redirect, Switch } from 'react-router-dom'\r\nimport 'antd/dist/antd.less'\r\nimport history from 'utils/History'\r\nimport PageName from 'constant/PageName'\r\nimport LoginPage from 'page/LoginPage/LoginPage'\r\nimport MerchantPage from 'page/Merchant/MerchantPage/MerchantPage'\r\nimport RegisterPage from 'page/Merchant/RegisterPage/RegisterPage'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route path={PageName.login} component={LoginPage} />\r\n          <Route path={PageName.register} component={RegisterPage} />\r\n          <Route path={'/'} component={MerchantPage} />\r\n          <Route exact path=\"/\">\r\n            <Redirect to={PageName.login} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { Provider } from 'mobx-react'\r\n\r\nReactDOM.render(\r\n  <Provider>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginPageContainer\":\"LoginPage_LoginPageContainer__30wOj\",\"title\":\"LoginPage_title__3EbeZ\",\"loginFormContainer\":\"LoginPage_loginFormContainer__2xkJU\",\"bottomForm\":\"LoginPage_bottomForm__1yokK\",\"registerText\":\"LoginPage_registerText__ZqWWU\"};"],"sourceRoot":""}